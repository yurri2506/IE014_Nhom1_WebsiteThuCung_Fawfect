import React, { useReducer } from "react";
import { Button, Card, Col, Row } from "antd";
import "./Notification.css"; // ƒê·∫£m b·∫£o CSS ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a t·∫°i ƒë√¢y
import ProfileUser from "../MyOrderPage/UserProfile.jsx";
import myAvatar from "../../assets/images/avatar.jpg";

const initdata = [
  {
    id: 1,
    img: "https://chiaki.vn/upload/news/content/2021/05/thuc-an-cho-cho-con-pedigree-jpg-1620290242-06052021153722.jpg",
    title: "KI·ªÜN H√ÄNG ƒêANG TR√äN ƒê∆Ø·ªúNG V·∫¨N CHUY·ªÇN",
    content: "üéâ Ki·ªán h√†ng ƒë√£ chuy·ªÉn th√†nh c√¥ng cho ƒë∆°n v·ªã v·∫≠n chuy·ªÉn. Shipper s·∫Ω s·ªõm li√™n h·ªá b·∫°n!",
    read: false,
  },
  {
    id: 2,
    img: "https://i.pinimg.com/736x/21/b3/e6/21b3e6294c5c83008fdbb4cc7e0a17ac.jpg",
    title: "NG√ÄY H·ªòI TH√ö C∆ØNG - ƒê·∫æN L√Ä C√ì QU√Ä",
    content: "üì¢ V·ªõi v√¥ s·ªë gi·∫£m gi√°, quay s·ªë nh·∫≠n qu√† h√≥t h√≤n h·ªçn. C√≤n ch·∫ßn ch·ªù g√¨ kh√¥ng tham gia ngay!",
    read: false,
  },
  {
    id: 3,
    img: "https://img.freepik.com/free-psd/flyer-template-with-dog-food_23-2148514498.jpg",
    title: "KHUY·∫æN M√ÉI 1/6 - MU√îN V√ÄN ∆ØU ƒê√ÉI CHO BOSS",
    content: "üéâ Chi·∫øc deal khuy·∫øn m√£i s·ªëc v·ªõi mu√¥n v√†n ∆∞u ƒë√£i t·ª´ s·∫£n ph·∫©m dinh d∆∞·ª°ng, ƒë·ªì ch∆°i, ƒë·ªì d√πng sinh ho·∫°t!",
    read: false,
  },
  {
    id: 4,
    img: "https://www.tiendauroi.com/wp-content/uploads/2019/07/9dc2c2985f7b96d5379542c522d887ec6c269c62.jpeg",
    title: "KHUY·∫æN M√ÉI 1/6 - MU√îN V√ÄN ∆ØU ƒê√ÉI CHO BOSS",
    content: "üì¢ V·ªõi v√¥ s·ªë gi·∫£m gi√°, quay s·ªë nh·∫≠n qu√† h√≥t h√≤n h·ªçn. C√≤n ch·∫ßn ch·ªù g√¨ kh√¥ng tham gia ngay!",
    read: false,
  },
];

const reducer = (state, action) => {
  switch (action.type) {
    case "MARK_ALL_AS_READ":
      return state.map((notification) => ({ ...notification, read: true }));
    default:
      return state;
  }
};

const NotificationPage = () => {
  const [notifications, dispatch] = useReducer(reducer, initdata);

  // ƒê√°nh d·∫•u t·∫•t c·∫£ ƒë√£ ƒë·ªçc
  const markAllAsRead = () => {
    dispatch({ type: "MARK_ALL_AS_READ" });
  };

  // H√†m ki·ªÉm tra tr·∫°ng th√°i v√† tr·∫£ v·ªÅ l·ªõp CSS
  const isRead = (read) => (read ? "notification read" : "notification unread");

  return (
    <div className="grid wide">
      <div style={{ margin: "0 auto", padding: "20px" }} className="container">
        <div className="notice-container">
          <ProfileUser full_name="Nguy·ªÖn L√™ Thanh Huy·ªÅn" src_img={myAvatar} name="yurri_2506" />
          <div className="content">
            <div className="action-buttons">
              <Button onClick={markAllAsRead} disabled={notifications.every((n) => n.read)}
                className="confirm-read-button">
                ƒê√°nh d·∫•u t·∫•t c·∫£ ƒë√£ ƒë·ªçc
              </Button>
            </div>
            <div className="notifications">
              {notifications.map((notification) => (
                <Card key={notification.id} className={isRead(notification.read)}>
                  <Row>
                    <Col span={4}>
                      <img
                        src={notification.img}
                        alt="Notification"
                        style={{ width: "100%", borderRadius: "5px" }}
                      />
                    </Col>
                    <Col span={20}>
                      <h6 className="notification-title">{notification.title}</h6>
                      <p className="notification-content">{notification.content}</p>
                    </Col>
                  </Row>
                </Card>
              ))}
              {notifications.length === 0 && <p>Kh√¥ng c√≥ th√¥ng b√°o n√†o.</p>}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default NotificationPage;
